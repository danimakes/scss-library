@use 'sass:meta';
@use 'sass:list';
@use 'sass:map';
@use '../space-mixin' as sm;
@use '../variables' as vars;
@use '../../scss2/map2';

// function used in the mixin named 'text'
@function __text-mixin-function($lines) {
    // comma-separates font-family values
    $family: map2.get($lines, font-family);
    @if $family != null {
        $lines: map.set(
            $lines,
            font-family,
            list.join((), $family, comma)
        );
    }

    // tries retrieve font-size from the map "font-sizes"
    // if it fails, the specified value is returned
    $size: map2.get($lines, font-size);
    @if $size != null {
        @if meta.type-of($size) == list and list.length($size) == 1 {
            $size: list.nth($size, 1);
        }

        $lines: map.set(
            $lines,
            font-size,
            map2.get(vars.$font-sizes, $size, $size)
        );
    }

    // tries retrieve font-weight from the map "font-weights"
    // if it fails, the specified value is returned
    $weight: map2.get($lines, font-weight);
    @if $weight != null {
        @if meta.type-of($weight) == list and list.length($weight) == 1 {
            $weight: list.nth($weight, 1);
        }

        $lines: map.set(
            $lines,
            font-weight,
            map2.get(vars.$font-weights, $weight, $weight)
        );
    }


    @return $lines;
}

// text mixin
// allows to set font-family, font-size, font-weight,
// line-height, text-align, text-decoration, text-overflow,
// text-transform properties
// >>   @include text(ff "Arial" sans-serif, fs 2rem, fw b, lh 1.2, tt u);
//
// ->   font-family: "Arial", sans-serif;
//      font-size: 2rem;
//      font-weight: bold;
//      line-height: 1.2;
//      text-transform: uppercase;
@mixin text($args...) {
    @include sm.new-space-mixin(
        $mixin-args: $args, 
        $properties: (
            font-family,
            font-size,
            font-weight,

            line-height,

            text-align,
            text-decoration,
            text-overflow,
            text-transform
        ), 
        $properties-short-hand: (
            ff: font-family,
            fs: font-size,
            fw: font-weight,

            lh: line-height,

            ta: text-align,
            td: text-decoration,
            to: text-overflow,
            tt: text-transform
        ),
        $values-short-hand: (
            font-weight: (
                b: bold,
                t: thin,
                k: black
            ),
            text-transform: (
                l: lowercase,
                c: capitalize,
                u: uppercase
            ),

        ),
        $default-values: (),
        $fn: meta.get-function(__text-mixin-function)
    );
}

// text inherit mixin
@mixin text-inherit {
    @include text(ff inherit, fs inherit, fw inherit, lh inherit, ta inherit, td inherit, to inherit, tt inherit);
}